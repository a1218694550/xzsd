<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.app.customer.goodsDetail.dao.GoodsDetailDao">
<!--    查询登录用户绑定的门店信息-->
    <select id="getStoreOfUser" parameterType="java.lang.String" resultType="com.xzsd.app.customer.goodsDetail.entity.StoreVO">
        select
        store.store_code as storeCode,
        store.store_name as storeName,
        store.user_code as userCode,
        store.phone,
        store.inv_code as invCode,
        store.bus_lis_code as busLisCode,
		CONCAT_WS('-',store.store_name,store.province,store.city,store.area,store.detailed_addr) as detailedAddress,
        store.version
        from t_sys_store store
        left join t_sys_customer customer on (store.inv_code = customer.inv_code)
        where store.is_delete = 0 and customer.cus_code = #{userCode}
    </select>
<!--    查询商品详情信息-->
    <select id="getGoods" parameterType="java.lang.String" resultType="com.xzsd.app.customer.goodsDetail.entity.GoodsVO">
        select
            goods.goods_code as goodsCode,
            goods.image_url as goodsImg,
            goods.goods_name as goodsName,
            goods.goods_intro as goodsIntro,
            goods.sellprice as sellPrice,
            goods.sumsales_volume as sumSalesVolume,
            goods.stock,
			avg(evaluate.evaluate_class) as starClass,
            goods.version
        from t_sys_goods goods
		left JOIN t_sys_goods_evaluate evaluate ON (evaluate.goods_code = goods.goods_code and evaluate.is_delete = 0)
        where goods.is_delete = 0 and goods.goods_code = #{goodsCode}
		GROUP BY goods.goods_code
    </select>
<!--    修改商品信息-->
    <update id="updateGoodsInfo" parameterType="com.xzsd.app.customer.goodsDetail.entity.GoodsInfo">
        update t_sys_goods
        <if test="browseVolume != 0">
            set browse_volume = browse_volume + #{browseVolume}
        </if>
        where is_delete = 0 and goods_code = #{goodsCode}
    </update>
<!--    加入购物车-->
    <insert id="addGoodsToCart" parameterType="com.xzsd.app.customer.goodsDetail.entity.OpeGoods">
        insert into t_sys_shopcart(
            shopcart_code,
            cus_code,
            goods_code,
            buy_count,
            sum_price,
            is_delete,
            creater,
            create_time,
            updater,
            update_time,
            version
        )values (
            #{shopCartCode},
            #{userCode},
            #{goodsCode},
            #{count},
            #{sumPrice},
            #{isDelete},
            #{creater},
            now(),
            #{updater},
            now(),
            0
        )
    </insert>
<!--    修改商品库存跟销售量-->
    <update id="updateGoods" parameterType="java.util.List">
    <foreach collection="orderDetailsList" index="index" item="item" open="" separator=";" close="">
        update t_sys_goods set
        sumsales_volume = sumsales_volume + #{item.count},
        stock = stock - #{item.count}
        where is_delete = 0 and goods_code = #{item.goodsCode}
    </foreach>
    </update>
<!--    新增订单-->
    <insert id="addOrder" parameterType="com.xzsd.app.customer.goodsDetail.entity.AddOrderInfo">
        insert into t_sys_order(
            order_code,
            cus_code,
            sum_price,
            order_status,
            pay_time,
            store_code,
            remarks,
            is_delete,
            creater,
            create_time,
            updater,
            update_time,
            version
        ) values (
            #{orderCode},
            #{userCode},
            #{sumPrice},
            0,
            now(),
            #{storeCode},
            #{remarks},
            #{isDelete},
            #{creater},
            now(),
            #{updater},
            now(),
            0
        )
    </insert>
<!--    新增订单详情-->
    <insert id="addOrderDetail" parameterType="java.util.List">
        insert into t_sys_order_details(
            ord_details_code,
            order_code,
            goods_code,
            buy_count,
            sum_price,
            is_delete,
            creater,
            create_time,
            updater,
            update_time,
            version
        )values
        <foreach collection="orderDetailsList" index="index" item="orderDetails" open="" separator="," close="">
        (
            #{orderDetails.orderDetailsCode},
            #{orderDetails.orderCode},
            #{orderDetails.goodsCode},
            #{orderDetails.count},
            #{orderDetails.price} * #{orderDetails.count},
            #{orderDetails.isDelete},
            #{orderDetails.creater},
            now(),
            #{orderDetails.updater},
            now(),
            0
        )
        </foreach>
    </insert>
<!--    查询商品评价列表-->
    <resultMap id="GoodsEvaluateMap" type="com.xzsd.app.customer.goodsDetail.entity.GoodsEvaluateVO">
        <id property="evaluateCode" column="evaluate_code"/>
        <result property="customerCode" column="user_code"/>
        <result property="goodsCode" column="goods_code"/>
        <result property="customerName" column="user_name"/>
        <result property="evaluateClass" column="evaluate_class"/>
        <result property="content" column="content"/>
        <result property="time" column="create_time"/>
        <collection property="listImgUrl" ofType="com.xzsd.app.customer.goodsDetail.entity.ImageInfo" select="listGoodsEvaluateImage" column="evaluate_code">
            <result property="evaluateCode" column="evaluate_code"/>
            <result property="imgUrl" column="image_url"/>
            <result property="sortOrdinal" column="sort_ordinal"/>
        </collection>
    </resultMap>
    <select id="listGoodsEvaluateByPage" parameterType="com.xzsd.app.customer.goodsDetail.entity.GoodsEvaluateInfo" resultMap="GoodsEvaluateMap">
        select
            evaluate.evaluate_code,
            `user`.user_code,
            evaluate.goods_code,
            `user`.user_name,
            evaluate.evaluate_class,
            evaluate.content,
            evaluate.create_time
        from t_sys_goods_evaluate evaluate
        left join t_sys_user `user` on (evaluate.creater = `user`.user_code)
        where evaluate.is_delete = 0 and evaluate.goods_code = #{goodsCode}
        <if test="evaluateClass == 1">
            AND evaluate.evaluate_class in (4,5)
        </if>
        <if test="evaluateClass == 2">
            AND evaluate.evaluate_class in (2,3)
        </if>
        <if test="evaluateClass == 3">
            AND evaluate.evaluate_class = 1
        </if>
        order by evaluate.create_time desc
    </select>
    <select id="listGoodsEvaluateImage" parameterType="java.lang.String" resultType="com.xzsd.app.customer.goodsDetail.entity.ImageInfo">
        select
        img.evaluate_code as evaluateCode,
        img.image_url as imgUrl,
        img.sort_ordinal as sortOrdinal
        from t_sys_evaluate_img img
        where img.is_delete = 0 and img.evaluate_code = #{evaluateCode}
        order by img.sort_ordinal asc
    </select>
<!--    <select id="listGoodsEvaluateByPage" parameterType="com.xzsd.app.customer.goodsDetail.entity.GoodsEvaluateInfo" resultType="com.xzsd.app.customer.goodsDetail.entity.GoodsEvaluateVO">-->
<!--        select-->
<!--        evaluate.evaluate_code as evaluateCode,-->
<!--        `user`.user_code as customerCode,-->
<!--        evaluate.goods_code as goodsCode,-->
<!--        `user`.user_name as customerName,-->
<!--        evaluate.evaluate_class as evaluateClass,-->
<!--        evaluate.content as content,-->
<!--        evaluate.create_time as time-->
<!--        from t_sys_goods_evaluate evaluate-->
<!--        left join t_sys_user `user` on (evaluate.creater = `user`.user_code)-->
<!--        where evaluate.is_delete = 0 and evaluate.goods_code = #{goodsCode}-->
<!--        <if test="evaluateClass == 1">-->
<!--            AND evaluate.evaluate_class in (4,5)-->
<!--        </if>-->
<!--        <if test="evaluateClass == 2">-->
<!--            AND evaluate.evaluate_class in (2,3)-->
<!--        </if>-->
<!--        <if test="evaluateClass == 3">-->
<!--            AND evaluate.evaluate_class = 1-->
<!--        </if>-->
<!--        order by evaluate.create_time desc-->
<!--    </select>-->
<!--    <select id="listGoodsEvaluateImage" parameterType="java.util.List" resultType="com.xzsd.app.customer.goodsDetail.entity.ImageInfo">-->
<!--        select-->
<!--            img.evaluate_code as evaluateCode,-->
<!--            img.image_url as imgUrl,-->
<!--            img.sort_ordinal as sortOrdinal-->
<!--        from t_sys_evaluate_img img-->
<!--        where img.is_delete = 0 and img.evaluate_code in-->
<!--        <foreach collection="goodsEvaluateVOList" index="index" item="item" open="(" separator="," close=")">-->
<!--            #{item.evaluateCode}-->
<!--        </foreach>-->
<!--        order by img.evaluate_code,img.sort_ordinal asc-->
<!--    </select>-->
<!--    <select id="listGoodsEvaluateByPage" parameterType="com.xzsd.app.customer.goodsDetail.entity.GoodsEvaluateInfo" resultMap="com.xzsd.app.customer.goodsDetail.entity.GoodsEvaluateVO">-->
<!--        select-->
<!--            evaluate.evaluate_code,-->
<!--            `user`.user_code,-->
<!--            evaluate.goods_code,-->
<!--            `user`.user_name,-->
<!--            evaluate.evaluate_class,-->
<!--            evaluate.content,-->
<!--            evaluate.create_time,-->
<!--            img.image_url,-->
<!--            img.sort_ordinal-->
<!--        from t_sys_goods_evaluate evaluate-->
<!--        left join t_sys_user `user` on (evaluate.creater = `user`.user_code)-->
<!--        left join t_sys_evaluate_img img on (evaluate.evaluate_code = img.evaluate_code and img.is_delete = 0)-->
<!--        where evaluate.is_delete = 0 and evaluate.goods_code = #{goodsCode}-->
<!--        <if test="evaluateClass != null and evaluateClass != '' and evaluateClass == 1">-->
<!--            AND evaluate.evaluate_class in (4,5)-->
<!--        </if>-->
<!--        <if test="evaluateClass != null and evaluateClass != '' and evaluateClass == 2">-->
<!--            AND evaluate.evaluate_class in (2,3)-->
<!--        </if>-->
<!--        <if test="evaluateClass != null and evaluateClass != '' and evaluateClass == 3">-->
<!--            AND evaluate.evaluate_class = 1-->
<!--        </if>-->
<!--        order by evaluate.create_time desc,img.sort_ordinal asc-->
<!--    </select>-->
</mapper>